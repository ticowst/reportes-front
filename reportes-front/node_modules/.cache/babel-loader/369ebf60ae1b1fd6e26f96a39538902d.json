{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TicowST\\\\Desktop\\\\TCS03\\\\teamrocket-reports-front-master\\\\src\\\\BibliotecaFunciones\\\\HtmlPDF.js\";\nimport Parser from 'html-react-parser';\nimport React, { Component } from 'react';\nimport CanvasJSReact, { CanvasJS } from '../canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar htmlPDF = async (totalLineas, tablaLineas, htmlTituloTabla, htmlTabla, leyenda1, leyenda2, htmlencabezado, inicioRelativo, finRelativo, jsonGrafica, finFake, htmlPieTabla, htmlTodoHeadTabla, titulo) => {\n  //En esta variable guardaremos las hojas del pdf\n  let pdf = [];\n  var topeLinea = 50;\n  var totalPag = 0;\n  var lineaActual = 0;\n  var paginaActual = 1;\n  var leyendaLineas = 11;\n  var banderaLeyendaGrande = false; //Si la tabla con su leyenda es menor a una pagina\n\n  if (tablaLineas + leyendaLineas <= topeLinea) {\n    totalPag = Math.round(totalLineas / topeLinea + 0.5);\n    await pdf.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tabla\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"imagenPdf1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, htmlencabezado, React.createElement(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel row\",\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"tituloPDF\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, titulo)), React.createElement(\"div\", {\n      className: \"subtituloPDF col-md-12\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Espacio Temporal: \", inicioRelativo != finFake ? inicioRelativo + \" al \" + finFake : inicioRelativo)), React.createElement(\"div\", {\n      className: \"col-md-10\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered col-md-10 TablaEstadisticaAzulPDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, htmlTodoHeadTabla ? Parser(htmlTodoHeadTabla) : htmlTituloTabla ? Parser(\"<th>Programa</th><th>Estado</th>\" + htmlTituloTabla) : Parser(\"<th>Programa</th><th>Estado</th><th>Total</th>\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Parser(htmlTabla)), htmlPieTabla ? React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, Parser(htmlPieTabla)) : null)))), React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      className: \"titulo2PDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Leyenda: \"), Parser(leyenda1)), React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, Parser(leyenda2))), React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-1\",\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, paginaActual, \" de \", totalPag))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  } else {\n    totalPag = Math.round((totalLineas - tablaLineas) / topeLinea + 0.5 + 1);\n    lineaActual = leyendaLineas;\n    banderaLeyendaGrande = true;\n    pdf.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tabla\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"imagenPdf1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, htmlencabezado, React.createElement(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel row\",\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"tituloPDF\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, titulo)), React.createElement(\"div\", {\n      className: \"subtituloPDF col-md-12\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Espacio Temporal: \", inicioRelativo != finFake ? inicioRelativo + \" al \" + finFake : inicioRelativo)), React.createElement(\"div\", {\n      className: \"col-md-10\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered col-md-10 TablaEstadisticaAzulPDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, htmlTodoHeadTabla ? Parser(htmlTodoHeadTabla) : htmlTituloTabla ? Parser(\"<th>Programa</th><th>Estado</th>\" + htmlTituloTabla) : Parser(\"<th>Programa</th><th>Estado</th><th>Total</th>\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, Parser(htmlTabla)), htmlPieTabla ? React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, Parser(htmlPieTabla)) : null)))), banderaLeyendaGrande ? React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      className: \"titulo2PDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Leyenda: \"), Parser(leyenda1)), React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, Parser(leyenda2))) : null, React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-1\",\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, paginaActual, \" de \", totalPag))))));\n  }\n\n  var iterador = 0;\n  var contenidoInterno = [];\n  var arregloInterno = [];\n\n  for (var i = inicioRelativo; i <= finRelativo; i++) {\n    // Ignorar----------------------------------------------------------------\n    // Ignorar----------------------------------------------------------------\n    if (lineaActual + 10 + 1 <= topeLinea) {\n      //Se puede poner graficas\n      arregloInterno.push( //Generar gráfico\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel-body col-md-6 mr-md-auto ml-md-auto\",\n        style: {\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, jsonGrafica[iterador]))));\n      lineaActual += 11;\n\n      if (iterador === jsonGrafica.length - 1) {\n        for (var j = lineaActual; j <= topeLinea; j++) {\n          //alert(j);\n          arregloInterno.push(React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }));\n        }\n      }\n    } else {\n      //Me indica que ya debo acabar la pagina\n      lineaActual = 0;\n      contenidoInterno.push(arregloInterno);\n      arregloInterno = [];\n      arregloInterno.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel-body col-md-6 mr-md-auto ml-md-auto\",\n        style: {\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, jsonGrafica[iterador]))));\n      lineaActual += 11;\n    }\n\n    iterador++;\n  }\n\n  contenidoInterno.push(arregloInterno);\n\n  for (var pagina of contenidoInterno) {\n    paginaActual++;\n    pdf.push(React.createElement(\"div\", {\n      id: \"imagenPdf\" + paginaActual,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, htmlencabezado, pagina, React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-1\",\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, paginaActual, \" de \", totalPag))));\n    banderaLeyendaGrande = false;\n  }\n\n  return pdf;\n};\n\nexport default htmlPDF;","map":{"version":3,"sources":["C:\\Users\\TicowST\\Desktop\\TCS03\\teamrocket-reports-front-master\\src\\BibliotecaFunciones\\HtmlPDF.js"],"names":["Parser","React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","htmlPDF","totalLineas","tablaLineas","htmlTituloTabla","htmlTabla","leyenda1","leyenda2","htmlencabezado","inicioRelativo","finRelativo","jsonGrafica","finFake","htmlPieTabla","htmlTodoHeadTabla","titulo","pdf","topeLinea","totalPag","lineaActual","paginaActual","leyendaLineas","banderaLeyendaGrande","Math","round","push","marginTop","alignItems","justifyContent","textAlign","iterador","contenidoInterno","arregloInterno","i","marginBottom","length","j","pagina"],"mappings":"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","sourcesContent":["import Parser from 'html-react-parser';\nimport React, { Component }  from 'react';\nimport CanvasJSReact, { CanvasJS } from '../canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar htmlPDF = async (totalLineas,tablaLineas,htmlTituloTabla, htmlTabla,leyenda1,leyenda2,htmlencabezado,inicioRelativo,finRelativo,jsonGrafica,finFake,htmlPieTabla,htmlTodoHeadTabla,titulo) =>{\n    //En esta variable guardaremos las hojas del pdf\n    let pdf = [];\n    var topeLinea = 50;\n    var totalPag = 0;\n    var lineaActual = 0;\n    var paginaActual = 1;\n    var leyendaLineas = 11;\n\n    var banderaLeyendaGrande = false;\n\n    //Si la tabla con su leyenda es menor a una pagina\n    if ((tablaLineas + leyendaLineas) <= topeLinea) {\n        totalPag = Math.round(totalLineas / topeLinea + 0.5);\n        await pdf.push(\n            <div>\n                <div id=\"tabla\" className='container'>\n                    <div id=\"imagenPdf1\">\n                        {/*Encabezado*/}\n                        {htmlencabezado}\n                        {/*Tabla*/}\n                        <div style={{ marginTop: 0 }} class=\"row justify-content-md-center\">\n                            <div class=\"panel row\" style={{ alignItems: 'center', justifyContent: 'center' }}>\n                                <div class=\"row\" style={{ alignItems: 'center', justifyContent: 'center', marginTop: 15 }}>\n                                    <div className=\"col-md-12 \">\n                                        <h5 className=\"tituloPDF\" align=\"center\">{titulo}</h5>\n                                    </div>\n                                    <div className=\"subtituloPDF col-md-12\" align=\"center\">Espacio Temporal: {inicioRelativo!=finFake?inicioRelativo+\" al \"+finFake:inicioRelativo}</div>\n                                </div>\n                                <div className=\"col-md-10\" style={{ marginTop: 20 }}>\n                                    <table className=\"table table-bordered col-md-10 TablaEstadisticaAzulPDF\">\n                                        <thead>\n                                            {htmlTodoHeadTabla?\n                                                Parser(htmlTodoHeadTabla)\n                                            :\n                                                htmlTituloTabla?\n                                                Parser(\"<th>Programa</th><th>Estado</th>\"+htmlTituloTabla)\n                                                :Parser(\"<th>Programa</th><th>Estado</th><th>Total</th>\")\n                                            }\n                                            \n                                        </thead>\n                                        <tbody>\n                                            {Parser(htmlTabla)}\n                                        </tbody>\n                                        {htmlPieTabla?\n                                            <tfoot>\n                                                {Parser(htmlPieTabla)}                                  \n                                            </tfoot>\n                                            :null}\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        {/*Leyenda*/}\n                        <div class=\"row justify-content-md-center\">\n                            <div className=\"col-md-6\">\n                                <hr></hr>\n                                <h5 className=\"titulo2PDF\">Leyenda: </h5>\n                                {Parser(leyenda1)}\n                            </div>\n                            <div className=\"col-md-1\"></div>\n                            <div className=\"col-md-3\">\n                                {Parser(leyenda2)}\n                            </div>\n                        </div>\n                        {/*\"[paginaActual] de [totalPag]\"*/}\n                        <div class=\"row justify-content-md-center\">\n                            <div class=\"col-md-1\"></div>\n                            <div class=\"col-md-9\"></div>\n                            <div class=\"col-md-1\" style={{textAlign: \"right\"}}>{paginaActual} de {totalPag}</div>\n                        </div>\n                        {/*Crear hoja*/}\n\n                        {/* Aca acaba la pimera hoja */}\n                    </div>\n\n                    <div>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n    else {\n        totalPag = Math.round(((totalLineas - tablaLineas) / topeLinea) + 0.5 + 1);\n        lineaActual = leyendaLineas;\n        banderaLeyendaGrande = true;\n        pdf.push(\n            <div>\n                <div id=\"tabla\" className='container'>\n                    <div id=\"imagenPdf1\">\n                        {/*Encabezado*/}\n                        {htmlencabezado}\n                        {/*Tabla*/}\n                        <div style={{ marginTop: 0 }} class=\"row justify-content-md-center\">\n                            <div class=\"panel row\" style={{ alignItems: 'center', justifyContent: 'center' }}>\n                                <div class=\"row\" style={{ alignItems: 'center', justifyContent: 'center', marginTop: 15 }}>\n                                    <div className=\"col-md-12 \">\n                                        <h5 className=\"tituloPDF\" align=\"center\">{titulo}</h5>\n                                    </div>\n                                    <div className=\"subtituloPDF col-md-12\" align=\"center\">Espacio Temporal: {inicioRelativo!=finFake?inicioRelativo+\" al \"+finFake:inicioRelativo}</div>\n                                </div>\n                                <div className=\"col-md-10\" style={{ marginTop: 20 }}>\n                                    <table className=\"table table-bordered col-md-10 TablaEstadisticaAzulPDF\">\n                                        <thead>\n                                            {htmlTodoHeadTabla?\n                                                Parser(htmlTodoHeadTabla)\n                                            :\n                                                htmlTituloTabla?\n                                                Parser(\"<th>Programa</th><th>Estado</th>\"+htmlTituloTabla)\n                                                :Parser(\"<th>Programa</th><th>Estado</th><th>Total</th>\")\n                                            }\n                                        </thead>\n                                        <tbody>\n                                            {Parser(htmlTabla)}\n                                        </tbody>\n                                        {htmlPieTabla?\n                                            <tfoot>\n                                                {Parser(htmlPieTabla)}                                  \n                                            </tfoot>\n                                            :null}\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                         {/*Leyenda*/}\n                         {banderaLeyendaGrande ?\n                            <div class=\"row justify-content-md-center\">\n                                <div className=\"col-md-6\">\n                                    <hr></hr>\n                                    <h5 className=\"titulo2PDF\">Leyenda: </h5>\n                                    {Parser(leyenda1)}\n                                </div>\n                                <div className=\"col-md-1\"></div>\n                                <div className=\"col-md-3\">\n                                    {Parser(leyenda2)}\n                                </div>\n                            </div>\n                        : null}\n\n                        {/*\"[paginaActual] de [totalPag]\"*/}\n                        <div class=\"row justify-content-md-center\">\n                            <div class=\"col-md-1\"></div>\n                            <div class=\"col-md-9\"></div>\n                            <div class=\"col-md-1\" style={{textAlign: \"right\"}}>{paginaActual} de {totalPag}</div>\n                        </div>\n                        {/*Crear hoja*/}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    var iterador = 0;\n\n\n    var contenidoInterno = [];\n\n    var arregloInterno = [];\n    for (var i = inicioRelativo; i <= finRelativo; i++) {\n\n        // Ignorar----------------------------------------------------------------\n        // Ignorar----------------------------------------------------------------\n\n        if ((lineaActual + 10 + 1) <= topeLinea) {\n\n            //Se puede poner graficas\n            arregloInterno.push(\n                //Generar gráfico\n                <div>\n                    <div class=\"panel row align-items-center\">\n                        <div class=\"panel-body col-md-6 mr-md-auto ml-md-auto\" style={{ marginBottom: 50 }}>\n                            {jsonGrafica[iterador]}\n                        </div>\n                    </div>\n                </div>\n            );\n            lineaActual += 11;\n\n            if(iterador === jsonGrafica.length -1){\n                        \n                for (var j = lineaActual; j <= topeLinea ; j++) {\n                    //alert(j);\n                    arregloInterno.push(<br/>)\n                }\n    \n            }\n\n        } else {\n            //Me indica que ya debo acabar la pagina\n            lineaActual = 0;\n            contenidoInterno.push(arregloInterno);\n            arregloInterno = [];\n            arregloInterno.push(\n                <div>\n                    <div class=\"panel row align-items-center\">\n                        <div class=\"panel-body col-md-6 mr-md-auto ml-md-auto\" style={{ marginBottom: 50 }}>\n                            {jsonGrafica[iterador]}\n                        </div>\n                    </div>\n                </div>\n            );\n            lineaActual += 11;\n        }\n\n        iterador++;\n    }\n    contenidoInterno.push(arregloInterno);\n\n    for (var pagina of contenidoInterno) {\n        paginaActual++;\n        pdf.push(\n            <div id={\"imagenPdf\" + paginaActual}>\n\n                {htmlencabezado}\n                {pagina}\n\n                {/*\"[paginaActual] de [totalPag]\"*/}\n                <div class=\"row justify-content-md-center\">\n                    <div class=\"col-md-1\"></div>\n                    <div class=\"col-md-9\"></div>\n                    <div class=\"col-md-1\" style={{textAlign: \"right\"}}>{paginaActual} de {totalPag}</div>\n                </div>\n\n            </div>\n\n        )\n        banderaLeyendaGrande = false;\n\n    }\n\n\n\n\n    return pdf;\n};\n \nexport default htmlPDF;"]},"metadata":{},"sourceType":"module"}