{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TicowST\\\\Desktop\\\\TCS03\\\\sigapdev-reports-front-master\\\\src\\\\ComponentesHechos\\\\Movilidad\\\\Movilidad.js\";\n\n/* App.js */\nimport React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap-tabs';\nimport CanvasJSReact, { CanvasJS } from './../../canvasjs.react';\nimport Parser from 'html-react-parser';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Movilidad extends Component {\n  constructor() {\n    //constructor inicial\n    super();\n    this.state = {\n      isUsed: false,\n      //usado para saber si las aplicacion es usada\n      showPopover: false,\n      //usado para mostrar o no el popup\n      verdades: {},\n      //usado para  ver que conceptos estan sieno usados\n      chartData: {},\n      //usado para dar datos al FusionChart (cuadro)\n      isChartLoaded: true,\n      //usado para mostrat el FusionChart\n      tableData: {},\n      //usado para dar datos a la tabla\n      isTableLoaded: false,\n      //usado para mostrar la tabla\n      conceptsData: {},\n      //usado para guardar los conceptos de la BD\n      isConceptsLoaded: false,\n      //usado para saber si ya obtuvimos los conceptos de la BD\n      infoType: \"importes\",\n      //usado para saber el tipo de informacion mostrada\n      titulo: 'REPORTE ESTADISTICO DE IMPORTES POR CONCEPTO',\n      //usado para el titulo del cuadro\n      subtitulo: 'DEL 03/01/2015 AL 06/01/2015',\n      //usado para el subtitulo del cuadro\n      fechaInicio: '1420243200',\n      //usado para la fecha inicial del cuadro\n      fechaFin: '1420502400',\n      //usado para la fecha final del cuadro\n      grafico: 'column2d',\n      //usado para el tipo de grafico del cuadro\n      anioini: '2015',\n      //usado para el año inicial del cuadro\n      aniofin: '2015',\n      //usado para el año final del cuadro\n      anio: '2015',\n      //usado para el año a biscar con el intervalo del mes\n      mesini: '1',\n      //usado para el mes inicial del cuadro\n      mesfin: '12',\n      //usado para el mes final del cuadro/grafico\n      opcion: 'fecha',\n      //usado para la opcion del filtro\n      colores: \"\",\n      //usado para el tipo de color del cuadro/grafico\n      grad: \"0\",\n      //usado para el gradiente del cuadro\n      prefijo: \"S/\",\n      //usado para el prefijo del cuadro\n      listaConceptos: \"\",\n      //usado para guardar una lista de los conceptos del cuadro\n      todos: true,\n      //usado para marcar todos los checkbox\n      conceptos: [],\n      //usado para saber que checkboxes son marcados\n      todosConceptos: [],\n      //usado para saber todos los conceptos que hay en la BD en otro tipo formato de dato\n      usuario: '',\n      //usado para la sesion del usuario\n      listaConceptosEncontrados: \"\",\n      //usado para saber que conceptos se encontraron en la consulta,\n      data: {},\n      poblacionEstudiantil: [],\n      miHtml: '',\n      miHtml2: ''\n    };\n    this.miFuncion = this.miFuncion.bind(this);\n    this.miFuncion();\n  }\n\n  miFuncion() {\n    fetch('https://teamrocket-reportes-backend.herokuapp.com/ApiController/poblacionEstudiantil') //hace el llamado al dominio que se le envió donde retornara respuesta de la funcion\n    .then(response => {\n      return response.json();\n    }).then(result => {\n      //console.log(result);\n      this.setState({\n        poblacionEstudiantil: result\n      });\n    });\n    fetch('https://teamrocket-reportes-backend.herokuapp.com/ApiController/poblacionDocente') //hace el llamado al dominio que se le envió donde retornara respuesta de la funcion\n    .then(response => {\n      return response.json();\n    }).then(result => {\n      var primerAnio = parseInt(result[0][\"date_part\"]);\n      var arreglo = [];\n      var arreglo2 = [];\n      var total = [];\n      var total2 = [];\n      var cadena = '<th>Año</th>';\n      var cadena2 = '<td>Alumnos</td>';\n      var cadena3 = '<td>Docentes</td>';\n\n      for (var i = primerAnio; i <= 2019; i++) {\n        arreglo[\"\" + i] = 0;\n        arreglo2[\"\" + i] = 0;\n        cadena = cadena + '<th>' + i + '</th>';\n      }\n\n      for (var i in this.state.poblacionEstudiantil) {\n        if (this.state.poblacionEstudiantil[i][\"anio_ingreso\"] != '2019') {\n          arreglo[this.state.poblacionEstudiantil[i][\"anio_ingreso\"]] = parseInt(this.state.poblacionEstudiantil[i][\"count\"]);\n        }\n      }\n\n      for (var i in result) {\n        arreglo2[result[i][\"date_part\"]] = parseInt(result[i][\"count\"]);\n      }\n\n      console.log(arreglo2);\n\n      for (var i in arreglo) {\n        total.push({\n          y: arreglo[i],\n          label: \"\" + i\n        });\n        total2.push({\n          y: arreglo2[i],\n          label: \"\" + i\n        });\n        cadena2 = cadena2 + '<td>' + arreglo[i] + '</td>';\n        cadena3 = cadena3 + '<td>' + arreglo2[i] + '</td>';\n      } //console.log(result);\n\n\n      this.setState({\n        isChartLoaded: true,\n        miHtml: cadena,\n        miHtml2: '<tr>' + cadena2 + '</tr><tr>' + cadena3 + '</tr>',\n        data: {\n          animationEnabled: true,\n          title: {\n            text: \"Movilidad Alumnos vs Movilidad Docentes\"\n          },\n          axisY: {\n            title: \"Número de Personas\",\n            includeZero: false\n          },\n          toolTip: {\n            shared: true\n          },\n          data: [{\n            type: \"spline\",\n            name: \"Alumnos\",\n            showInLegend: true,\n            dataPoints: total\n          }, {\n            type: \"spline\",\n            name: \"Docentes\",\n            showInLegend: true,\n            dataPoints: total2\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      align: \"center\",\n      className: \"textTab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Tabla\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading mt-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"panel-title textTitulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Tabla de Movilidad\")), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped col-md-11 mr-md-auto greenTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, Parser(this.state.miHtml))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, Parser(this.state.miHtml2))))), React.createElement(Tab, {\n      label: \"Grafico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading mt-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"panel-title titulo \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Grafica de Movilidad\")), React.createElement(\"div\", {\n      class: \"panel-body col-md-11 mr-md-auto ml-md-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: this.state.isChartLoaded ? this.state.data : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Movilidad;","map":{"version":3,"sources":["C:\\Users\\TicowST\\Desktop\\TCS03\\sigapdev-reports-front-master\\src\\ComponentesHechos\\Movilidad\\Movilidad.js"],"names":["React","Component","Tabs","Tab","CanvasJSReact","CanvasJS","Parser","CanvasJSChart","Movilidad","constructor","state","isUsed","showPopover","verdades","chartData","isChartLoaded","tableData","isTableLoaded","conceptsData","isConceptsLoaded","infoType","titulo","subtitulo","fechaInicio","fechaFin","grafico","anioini","aniofin","anio","mesini","mesfin","opcion","colores","grad","prefijo","listaConceptos","todos","conceptos","todosConceptos","usuario","listaConceptosEncontrados","data","poblacionEstudiantil","miHtml","miHtml2","miFuncion","bind","fetch","then","response","json","result","setState","primerAnio","parseInt","arreglo","arreglo2","total","total2","cadena","cadena2","cadena3","i","console","log","push","y","label","animationEnabled","title","text","axisY","includeZero","toolTip","shared","type","name","showInLegend","dataPoints","render"],"mappings":"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","sourcesContent":["/* App.js */\n\nimport React, { Component } from 'react';\nimport {Tabs, Tab} from 'react-bootstrap-tabs';\nimport CanvasJSReact, {CanvasJS} from './../../canvasjs.react';\nimport Parser from 'html-react-parser';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Movilidad extends Component {\n\n    constructor(){//constructor inicial\n        super();\n        this.state = {\n            isUsed:false, //usado para saber si las aplicacion es usada\n            showPopover: false, //usado para mostrar o no el popup\n            verdades : {}, //usado para  ver que conceptos estan sieno usados\n            chartData : {}, //usado para dar datos al FusionChart (cuadro)\n            isChartLoaded: true, //usado para mostrat el FusionChart\n            tableData: {}, //usado para dar datos a la tabla\n            isTableLoaded: false, //usado para mostrar la tabla\n            conceptsData: {}, //usado para guardar los conceptos de la BD\n            isConceptsLoaded: false, //usado para saber si ya obtuvimos los conceptos de la BD\n            infoType : \"importes\", //usado para saber el tipo de informacion mostrada\n            titulo: 'REPORTE ESTADISTICO DE IMPORTES POR CONCEPTO', //usado para el titulo del cuadro\n            subtitulo: 'DEL 03/01/2015 AL 06/01/2015', //usado para el subtitulo del cuadro\n            fechaInicio: '1420243200', //usado para la fecha inicial del cuadro\n            fechaFin: '1420502400', //usado para la fecha final del cuadro\n            grafico : 'column2d', //usado para el tipo de grafico del cuadro\n            anioini : '2015', //usado para el año inicial del cuadro\n            aniofin : '2015', //usado para el año final del cuadro\n            anio: '2015', //usado para el año a biscar con el intervalo del mes\n            mesini : '1', //usado para el mes inicial del cuadro\n            mesfin : '12', //usado para el mes final del cuadro/grafico\n            opcion : 'fecha', //usado para la opcion del filtro\n            colores : \"\", //usado para el tipo de color del cuadro/grafico\n            grad : \"0\", //usado para el gradiente del cuadro\n            prefijo : \"S/\", //usado para el prefijo del cuadro\n            listaConceptos : \"\", //usado para guardar una lista de los conceptos del cuadro\n            todos : true, //usado para marcar todos los checkbox\n            conceptos : [], //usado para saber que checkboxes son marcados\n            todosConceptos : [], //usado para saber todos los conceptos que hay en la BD en otro tipo formato de dato\n            usuario : '', //usado para la sesion del usuario\n            listaConceptosEncontrados : \"\", //usado para saber que conceptos se encontraron en la consulta,\n            data: {},\n            poblacionEstudiantil : [],\n            miHtml: '',\n            miHtml2: ''\n        };\n        this.miFuncion = this.miFuncion.bind(this);\n        this.miFuncion();\n\n    }\n\n\n    miFuncion(){\n\n        fetch('https://teamrocket-reportes-backend.herokuapp.com/ApiController/poblacionEstudiantil')//hace el llamado al dominio que se le envió donde retornara respuesta de la funcion\n        .then((response)=>{\n            return response.json();\n        })\n        .then((result)=>{\n\n            //console.log(result);\n            this.setState({\n                poblacionEstudiantil : result,\n            });\n        });\n\n        fetch('https://teamrocket-reportes-backend.herokuapp.com/ApiController/poblacionDocente')//hace el llamado al dominio que se le envió donde retornara respuesta de la funcion\n        .then((response)=>{\n            return response.json();\n        })\n        .then((result)=>{\n\n            var primerAnio = parseInt(result[0][\"date_part\"]);\n            var arreglo =[];\n            var arreglo2 =[];\n            var total = [];\n            var total2 = [];\n            var cadena = '<th>Año</th>';\n            var cadena2 = '<td>Alumnos</td>';\n            var cadena3 = '<td>Docentes</td>';\n\n            for (var i = primerAnio;i<=2019;i++){\n                arreglo[\"\"+i]=0;\n                arreglo2[\"\"+i]=0;\n                cadena = cadena + '<th>'+i+'</th>';\n            }\n\n            for(var i in this.state.poblacionEstudiantil){\n                if(this.state.poblacionEstudiantil[i][\"anio_ingreso\"]!='2019'){\n                    arreglo[this.state.poblacionEstudiantil[i][\"anio_ingreso\"]] = parseInt(this.state.poblacionEstudiantil[i][\"count\"]);\n\n                }\n            }\n\n            for(var i in result){\n                arreglo2[result[i][\"date_part\"]] = parseInt(result[i][\"count\"]);\n            }\n\n            console.log(arreglo2);\n\n            for(var i in arreglo){\n                total.push({y:arreglo[i],label:\"\"+i});\n                total2.push({y:arreglo2[i],label:\"\"+i});\n                cadena2 = cadena2 + '<td>'+arreglo[i]+'</td>';\n                cadena3 = cadena3 + '<td>'+arreglo2[i]+'</td>';\n            }\n\n\n            //console.log(result);\n            this.setState({\n                isChartLoaded : true,\n                miHtml:cadena,\n                miHtml2:'<tr>'+cadena2+'</tr><tr>'+cadena3+'</tr>',\n                data: {\n                    animationEnabled: true, \n                    title:{\n                        text: \"Movilidad Alumnos vs Movilidad Docentes\"\n                    },\n                    axisY : {\n                        title: \"Número de Personas\",\n                        includeZero: false\n                    },\n                    toolTip: {\n                        shared: true\n                    },\n                    data: [{\n                        type: \"spline\",\n                        name: \"Alumnos\",\n                        showInLegend: true,\n                        dataPoints: total\n                    },\n                    {\n                        type: \"spline\",\n                        name: \"Docentes\",\n                        showInLegend: true,\n                        dataPoints: total2\n                    }]\n                }\n            });\n        })\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <Tabs align=\"center\" className=\"textTab\" >\n                    <Tab label=\"Tabla\">\n                        <div class=\"panel row align-items-center\">\n                            <div class=\"panel-heading mt-3 mb-3\">\n                                <h4 class=\"panel-title textTitulo\">Tabla de Movilidad</h4>\n                            </div>\n                            <table className=\"table table-bordered table-striped col-md-11 mr-md-auto greenTable\">\n                                <thead>\n                                    <tr>\n                                        {Parser(this.state.miHtml)}  \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                        {Parser(this.state.miHtml2)}  \n                                </tbody>\n                            </table>          \n                        </div>\n                    </Tab>\n                    <Tab label=\"Grafico\">\n                    <div class=\"panel row align-items-center\">\n                        <div class=\"panel-heading mt-3 mb-3\">\n                            <h4 class=\"panel-title titulo \">Grafica de Movilidad</h4>\n                        </div>\n                        <div class=\"panel-body col-md-11 mr-md-auto ml-md-auto\">\n                            <CanvasJSChart options = {(this.state.isChartLoaded) ? this.state.data : (null)} />\n                        </div>           \n                    </div>\n                    </Tab>\n                </Tabs>\n            </div>\n\n        );\n    }\n}\nexport default Movilidad;\n"]},"metadata":{},"sourceType":"module"}